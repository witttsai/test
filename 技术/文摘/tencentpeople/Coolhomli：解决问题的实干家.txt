Coolhomli：解决问题的实干家

coolhomli(李国宏)，互娱琳琅天上工作室御龙在天项目技术副总监，公司软件开发通道分会委员。2004年加入腾讯，前几年研发QQ对战平台、QQGame1.0、QQGame2.0；2006年参与研发中心公共技术研发，包括基础库建设、TPF、统一登录系统、VFS、网络、休闲游戏开发平台（GameSDK）等，合作过的项目包括小熊梦工厂、QQ飞车、幻世、QQ三国、QQ仙侠传、轩辕传奇等，同时负责MMORPG公共系统预研工作；2009年开始参与腾讯第一国战网游御龙在天的客户端技术研发工作。

导读：

作为一个土生土长的腾讯人，一毕业就入职腾讯互娱，历时8年成长为一个T4专家。他的成长经历不仅带有更多的腾讯烙印，也带有互娱的烙印，听完他的成长故事，你一定会相信：机会一定是留给有准备的人的。

 

从QQ对战平台到QQ Game 1.0：从初级开发者到专业开发者



2004年3月，我幸运地以实习生的身份加入了腾讯，刚开始负责的产品是QQ对战平台，在QQ对战平台实习的三个月最大的收获就是如何去设计和开发一款平台型的游戏产品，大学期间我就热衷软件开发，还做了几份兼职，每个月有2K多的收入，但是之前的工作都是架构师设计好了自己来编码实现而已，这实习的三个月是一个转折点，应该是第一次全程参与到早期的预研和设计环节当中。比较开心的是，当时实习期间，leader和导师比较满意我的表现，最后还获得提前转正。

转正之后，04年8月，我转到了QQ Game项目组。众所周知，当时的联众位居国内第一大休闲游戏平台，而QQ Game还处于1.0版本的起步阶段，也就是十几万的在线人数。伴随着QQ Game发展的一年半里，最大的收获就是，我熟悉了QQ Game前后台的开发架构，还有windows游戏开发的相关知识，由一个初级开发者发展到了专业开发者阶段。

 

Q1:你在实习期能够提前转正，说明当时在新人当中你的表现非常突出，你有没有尝试总结过，当时能提前转正的主要因素是什么？有什么样的经验可以分享给新人同学？

Coolhomli：我觉得这个问题，应该是我当时的导师living(李炯)最有发言权。其实新人刚开始压力比较大，也会担心自己事情做不好，会很紧张，不好意思，但是这种压力感和紧张感也会迫使自己有意识地多观察，多思考。首先，很多同事（尤其是我的导师living）都是我学习的榜样，有意识地观察他们平时是怎样做事情，如果是我做的话，怎样做才会更好。第二，适当的给自己更多的要求，不要只关注自己负责的事情，项目相关的其他事情，也需要主动去了解和接触，拓展知识面。第三，我认为最重要的是，会把工作进展和想法反馈给我的导师，更多的会和他做一些互动和沟通，现在我作为一个leader或者导师辅导实习生或毕业生的时候，觉得主动反馈的意识是很重要的。因此建议新人可以主动跟自己的导师和leader多一些沟通和反馈。我觉得我当新人时，可能在以上三个方面做的比较多吧。

 

QQ  Game 重构之路:架构理念，底层知识尤为重要



 QQ Game从03年上线以来，在线人数不断增长，服务规模的不断扩大，同时公司希望将 QQ Game建设成为一个平台型产品，现有的系统架构要想支撑和满足未来的发展会有不少的局限性，于是 QQ Game 开启了重构之路。 

当时的 QQ Game 重构项目，公司高层及项目组每一个人都很重视，曾总（即zengyu(曾宇)），腾讯游戏的先锋之一，当时QQ Game后台开发的老大，担任了项目总负责人；前台方面则请了公司前架构部的张宇，一个我们心目中的技术牛人，作为前台负责人。

QQ Game 重构，迎来2.0版本，意味着推翻原有，彻底的重写一套代码。现在回想起来，这个过程让我们每个人有机会参与到设计的每一个环节（前台和后台），全面了解这个产品从零到有的过程。因此这个过程是一个非常宝贵的经验。

我在 QQ Game 重构项目中印象比较深刻，收获较大有以下几点：

第一个比较深刻的是对架构的理解和把握：张宇是一个拥有成熟的架构思想的技术人员，但是他自己并不会确定好了方案细节再来让你实施，更像是导师，带着我们进行方案的讨论，让大家充分理解新架构的设计思想，并放手让我们进行各自模块的设计工作。记得当时大家经常会在一起开会讨论，会上大家会很有激情地讨论和PK各自的设计理念及依据，好在哪里，不好在哪里，最后实施改进，最终形成快速的迭代和敏捷的开发。虽然每个人所做的内容只是整个项目一部分，但是通过全过程的充分参与，你能够了解的是全部设计，所以这个是非常非常快速成长的一个过程，在这个阶段就形成我对架构的认识、理解和把握，培养了架构能力。

还有一点就是说研发中很重要的---深度调试的能力，作为研发人员，这个能力是非常重要的，尤其是运营中的产品，需要快速定位分析解决问题，第一时间解决玩家的问题。而之前我们的调试手段是比较简单化的，依赖于常规的debug环境、代码级别、依赖重现等初级手段。张宇给大家介绍了windbg软件调试技巧，能够非常方便的去分析解决研发期和运营期的异常问题，并且搭建了自动化的环境，调试变成非常有吸引力的事情了，通过windbg去解决疑难杂症是很有成就感的，结果也能够带来产品稳定性的提升。

这个能力我后来到御龙项目组发挥了重要的作用，当时御龙项目组前台的同事都比较年轻，遇到问题也不知道怎么去快速诊断和解决，比较依赖于代码级别去分析调试，也没有很好的保护异常现场的意识，所以偶现性的问题就很难被解决掉。于是我把调试能力作为团队能力开始着手建设，把整套调试流程建立起来，实现快速解决问题，且能自动上报和分析。我经常建议同事应该掌握多一些调试技巧，也要会进行汇编调试，这一点很多同事刚开始并不看重，因为现在的C++，C语言等高级语言是比较直观的， 而汇编语言属于相对难懂的。很多人就觉得掌握不掌握没有关系了，但在解决疑难问题的时候都是可以起到关键的作用。游戏要成功，好玩是关键，但是玩着玩着突然崩掉，或者是你玩游戏时候突然卡着不动了，意味着稳定性很差，再好玩的游戏也不会获得玩家的喜欢，通过好的调试技术确保稳定性很重要。

相对基础底层的知识通常是容易被大家忽略的。很多毕业生刚来，都会思考自己的技术发展方向，容易追求一些比较潮流的东西，比如有的人想学3D引擎，因为感觉做出来的画面效果很炫，比如有的人想学一些技巧类的东西，想快速学会架构设计的方法，但是我觉得这些技术只需要你掌握了方法，多学多做是很容易实现的。大家真正容易忽略的是我的Windows开发知识够不够扎实，我的调试技巧掌握的够不够多，优化的方案经验累计够不够，对计算机系统的原理是否理解透彻，是否能够了解GPU的运行原理等等，这些基础决定了你后面能走多远，能否去解决很多疑难问题。

因此我觉得架构很重要，另一方面低层基础也很重要，这两方面，不管自己补也好，学也好，都要好好把握到的。



研发中心的日子：服务创造价值



2006年，完成了QQ Game 2.0重构工作之后，我转到了互娱研发中心（即现在的互娱研发部），主要负责公共组件库工作，我们主要的工作是把已有的一些基础的组件提炼推广到其他项目组，没有的组件则重新开发或提炼，推广。研发中心主要是以技术为导向的部门，所以我们做的很多东西的主要考虑是如何帮助到我们服务对象，从而创造出我们的价值和贡献。

这个阶段感悟比较深的，第一就是服务意识和产品意识有了很大的提高，记得有一次骨干沙龙里面，曾总提出“服务者”的观点，当时感觉服务意识这个观点很好，但是大家观念还没有转变过来，因为服务意味着需要随时支撑各种客户的需求，要按计划输出版本，又要随时解决问题，时间不够，计划容易无序，疲于奔命。同时用户的需求都是很零碎，张三提三个需求，李四提一个需求，只有一个需求是相同，如果只针对这个公共需求开发，用户是不会买账的，你只能满足我的50%需求，另外的50%你又不满足了，而且我还不知道你做出的东西好不好用，稳不稳定，别人又没有用过，我可能是小白鼠，最后项目组决定还是自己做吧，反正项目组有人力可以不等你，所以我们就在考虑是不是有什么方法可以更好地服务他们。因此当时我们也做了一个比较大的决定和尝试，首先要把用户服务好，满足各个项目组的个性化需求，就是说先把东西做出来，然后应用下去，能够尽量减少每个项目组自己在做重复工作的时间，这就是我们公共技术中心存在的最大价值。所以这个过程当中，我觉得对我影响比较大的，就是刚才这种用户服务的意识，这是很重要一点。

第二，第三个比较重要的是换位思考，全局观能力：以前的工作就是纯技术范畴，你给我需求，我就去实现去行了，这就从技术角度去考虑。但是做了公共组件库之后，需要站在项目的角度去考虑，我的做法是，接受需求的同时，首先考虑好你下一步可能会对我提出什么样需求，另外会完善技术性的需求，比如异常保护：玩家网络断了怎么办，内存不够用了怎么办，磁盘空间满了怎么办，类似这样的异常需求，项目一般不提，需要自己补充完备，所以考虑问题要有全局观，要学会换位思考的角度上看问题。虽然过程会比较费劲，其实是有好处，可以化被动为主动，让研发计划相对有序，减少发补丁的概率。所以后来我带新人的时候，我会经常提醒新人要想多一步，多为用户考虑未来可能产生的问题，尽可能全面。这是我在研发中心感觉能力提升较快的一个能力点。

第四点，在研发中心，对我技术上面提高最快或者说积累最多的是，就是知识广度方面，因为当时在研发中心，因为预研的需要，会涉猎多方面的知识，也有机会经常与各个项目组沟通交流（也有跨BU的技术分享交流），能够了解到各种技术方案，代码或文档，每个项目都可以为你打开一扇窗。不少项目的骨干因为合作的关系，大家的关系不错，技术交流都非常多，会经常在RTX探讨技术问题，这也让我收获不浅。虽然我是前台开发，但会有意识的学习后台开发知识，让自己多些服务器的知识背景，这样考虑问题就更加立体不至于太片面，能考虑到后台的架构，部署，消耗，C/S通讯限制，同步等因素。知识广度拓展了以后，视野会不太一样，设计方案的时候，会首先想到其他项目是怎么样做的，哪些是共性的问题，哪些是特殊的情况，把好的借鉴过来，并灵活应用到自己负责的项目当中去，减少了摸索的时间，也避免了走弯路，即使方案不能套用，也会给自己更多的启发。延伸一下，这样也养成了一个习惯，自己会去关注行业内游戏的技术方案，不管是成功的游戏还是一般的游戏，都可以发现些技术亮点。

 

Q2：就你自己的经验和体会来看，毕业八年，你是如何搭建自己的一个知识体系的？

coolhomli：这个是非常好的问题，其实很多年前就我问过张宇类似的问题。当时他给我的启发，就是说知识一定要结构化。那知识应该怎么结构化呢？我后来有去查阅一些脑科学方面的书籍，零散的知识在脑细胞里面很难固化的，人学的知识在前八个小时遗忘是最快的，如果你有机会在八小时之内复习一遍，记住的概率就大大增加了，如果你过几天再固化一次，然后你记住的时间就一定是更长。现在好多时候，我们看了一遍感觉好像就记住了，这是一个假象，知识还没有沉淀下来。很多人学东西，时间一长，没有应用的就不记得了，其实这是缺乏对这种经验的了解。所以知识一定要结构化起来，比如说建立关联，建立两者之间的关联或关系，关联越是完整，越是有规律可循，就记得越牢，就像一个漏斗一样，沙子里面，有关联的沙子，联系或关联越大，它就不太容易漏下去，或者漏的时间会比较慢一点，可以这么类比一下。这里要说到，我为什么喜欢交流的原因。现实当中，你可以去学习各种知识，因为专业分工的原因，每个人不可能有机会去从事所有的工作或应用所有的知识，但是可以去交流，看看别人是怎么做，能否给我启发，我是否有更好的方案，这个交流的过程就是应用的过程。最重要的不是想着记住更多的事情，而是怎么样应用记忆。

 

Q3：知识海洋是非常宽广的，我们要学的东西非常多，如何选择某个阶段自己的学习方向？

coolhomli：游戏开发，跟通常的软件开发不太一样，游戏开发涉及的知识点会更广一些，所以知识广度当然越广越好了，但是最开始的时候一定要找到自己优势点，把优势点充分发挥并产生价值，自己才不会有挫折感。成长，通常包括两方面，一个是绩效成长，还有一个能力成长。光是能力成长是没有意义的，因为即使你学再多的东西，最终没有产生价值，也就是绩效没有体现，那也是做无用功，因此能力成长要最终以绩效成长作为衡量标准的。但是如果你能找到自己的优势点，知道什么是你的优势，不断提升自己的优势的影响力，最终产生价值，形成贡献绩效之后，再延伸到广度---学习其他方面知识，你才会越来越有能量。我的建议首先就是发挥自己的长处，长处不够的地方要补足长处，绩效成长起来后，然后再延伸出广度。深度和广度两个相辅相成，个人绩效和能力才能不断成长。

 

御龙在天：解决问题，打造影响力



在研发中心的日子，由于积累了不少经验和知识，我也跟很多人的想法一样，希望能把知识应用起来，希望到项目组去锻炼一下。大约半年之后，2009年，我转到了御龙项目组。

刚到御龙时，应该是自己压力最大的一段时间，因为想把项目做好。当时御龙前台客户端的架构还不适合未来多人并行上量开发，后面还有GR3的压力，重构势在必行。当时面临的第一个问题，刚来御龙的“新”人负责主导重构工作，那个时候我还不是主程，没有了leader这个职位的硬性影响力，如何建立大家对我的信任和支持？

当时的御龙前台开发团队人数有11个人，都比较年轻，包括我在内，大家都没有经历过完整的成功MMORPG的研发的经验，所以很多对于工作上的问题，大家的观点比较多，难以统一。如何让大家达成共识，凝聚成一条绳？我知道假如没有经过一定的讨论、参与和论证，大家是未必会轻易接收我所提出的观点。这时我以前在研发中心积累的知识和经验就开始发挥作用了，于是我开始邀请其他项目组（比如仙侠传，幻想等）的骨干与大家进行分享和探讨，有时候在分享和探讨中形成的观点恰恰与我吻合，无形之中也印证了我的观点，时间一长，开始建立了我在团队的影响力。有时候，我提出自己的观点同时也会多了解其他同事的想法，比如说他考虑到时间比较紧，认可方案但是确实没有时间实施，这时我们也会一起制定现阶段的折中方案，让同事勇于发表自己的观点，这样也很容易形成共识。形成了共识，团队就有了前进的动力。所以说要提升自己的影响力，需要能够解决实际的问题，否则说再多也是白说，没有信服力。

第二件事是御龙初期，系统稳定性很差，经常出现系统崩溃的情况。崩溃让人低落，很影响情绪。要想提高大家的士气则要提高系统稳定性，提高稳定性则要提高大家的调试能力。当时团队成员调试能力都很弱，很多工具都不会使用，也无法解决疑难问题。这时我之前积累的调试能力充分发挥作用了，我自己先给大家做出榜样，每个问题都会全力去分析和解决，尤其是遗留的疑难问题，把问题跟出来并且解决，然后第一时间开展“微”分享，形式不限，总之能把调试过程和技巧让大家理解即可。一个团队光靠我一个人是不行，做了两件事情，一是培养更多的调试高手，二是建立完整的调试自动化流程，用工具自动化分析问题所在，实现傻瓜式发现问题。虽然当时很多问题无法全部解决掉，但是结果大家是有目共睹的，版本不在那么脆弱了，遗留的问题也逐步得到解决，系统的稳定性在逐步提高，自然大家信心也相对提高了。

第三，其实我们最头疼的问题，就是百人同屏的性能问题。09年的时候，我在路上跟一位同事聊到这个话题，他都不相信我们是3D游戏，他的概念里面国战游戏不适合3D，性能是个大问题。御龙在市场定位上面，要做差异化竞争，既要求炫丽的3D面画，又要求国战人多，越多越好，但是画面和性能就像天平的两端，一边是画面，一边是性能，画面好的时候性能低，性能高的画面要简化。为了这个平衡，美术和开发会经常会红着脸，但相互妥协不是解决问题的根本办法。为了克服这个问题，我们首先要要明确目标，一个共同的目标，这样经过制作人的确认，我们的性能目标就出炉了；接下来做的是量化，做性能剖析工具，通过工具一目了然了解问题所在，进而进行优化。二，解决信心问题，因为系统优化是一个充满挑战的事情，有很多的不确定性，当大家优化到一定程度时，会出现惰性，认为性能不太可能再优化了，大家也容易拿市面上的游戏做对比，我的观点是没有解决不了的问题，只有解决不了问题的人，号召大家多去思考，我们做不到是因为我们的能力不够，才导致性能只优化到这个层次，如果我们能力够了，其实性能还能不断进行挖掘和提升。这时我必须要跟大家一起寻找关键点去突破他，大家越觉得不能优化的，我们就越要突破它。时时刻刻想着这个问题，只有这样才会迫使你，去思考各种问题，了解业内方案或者进行项目交流学习来帮助大家更好地思考，思路来了问题也就解决了。突破之后，大家会更有信息去解决下一个问题。第三，我们会关注业界标杆产品，进行研究对比。比如新出了一款游戏，我们会派同事去做技术分析，供大家参考。

经历以上几个事情，自己的影响力也慢慢在提升，这些都是支撑我在御龙成长的基石。

在御龙还有一个比较大的成长就是，产品意识会越来越强。举个例子，游戏研发被抱怨最多的就是需求变更，其实这个情况每个项目都有，是很难调和的一个矛盾。我们要求作为开发人员自己要有产品意识，策划所提需求也许不是很完备，但是你可以提出意见补充和完善它，如果你的意见被采纳了，过程中你也会有成就感；如果你的意见没被采纳，产品也会考虑你的看法，变更所带来的改动也会有所调整。所以说我们经常跟同事沟通，不要纯技术地看待工作，要有产品意识和用户意识。怎么样来培养呢？我们会发挥有多些产品感觉的技术同事的力量，同时号召和组织大家多玩游戏，尤其是御龙在天，我们有自己的家族、帮派和军团，不管是家族战、帮派战、国战、跨服战、三国志……，我们都会组织大家一起去玩，融入其中，也感受玩家的激情，当国王在激情四射的指挥的时候，技术同事是很有感觉的；当然，遇到不爽的，我们也玩家一样，骂自己的产品，但骂归骂，完了之后，我们会老老实实的去收集的吐槽，把玩起来感觉“痛”的点整理后发给策划同事，一起来讨论优化的方案。

我们的很多需求，大部分来自于产品方，但其实技术上需求，很大程度是来自我们挖掘，比如说怎样把游戏做得更好，怎样把系统调优，把性能提高。这就需要我们对结果有很强的意识，你才能去推动自己去思考，去分解目标。虽然很多时候没有人告诉我们应该要做什么，即使这样也不能原地踏步，不思考，我们必须要学会主动提升，去想怎么样超出预期，能帮助产品做到什么程度。

 

Q4：在你个人的成长过程中，有哪些学习的标杆或榜样，对你影响比较大？

coolhomli：职业生涯开始遇到第一个影响比较大的人是，我在新人时导师及leader  living(李炯)，他是一个非常好的导师，做事情认真严谨，对技术非常有追求；

第二个影响我比较深的则是张宇，他不仅影响了我，还影响了当年QQ Game的一群人。张宇是一个很善于沟通的人，每次与他沟通，他都不会给你很大压力；他经常会给我们一起启发，比如说探讨怎么去学架构的问题，他就建议过我去看医学的书，让我通过学习人的身体构造―这个自然界最好的架构去理解一个架构应该如何搭建。

到了QQ Game，影响最深的就是曾总了，我一直认为曾总是个有哲学思想的技术人员。他不仅技术很牛，工程意识和项目管理意识也非常强，记得当时在QQGame重构阶段，他为大家创造了很好的交流和探讨环境，身为PM的他也经常参与架构的讨论，跟他一起共事，让我们学到了很多，特别是对技术的理解，曾总喜欢去问很多“为什么”，意思是提醒我们看问题不要只是去看表面，他会理解这个事情你是如何思考的，目的是什么，优势和劣势要做一个对比和剖析，彻底考虑清楚。

研发中心期间，steve的指导也帮助很大，他看问题很全面，而且面对复杂的问题，能够很快抓住要点来跟你进行讨论，这些能力都非常令人钦佩。对人也非常的nice，我记得刚来御龙，和韩勇一起负责同步的问题，当时这个问题就多次去请教steve，有一次还赶上晚上吃饭的时间，在他的办公室的白板一讨论就是一个多小时，他一直都非常的耐心去解答我们的每一个问题。

来到了御龙之后，colin对我的影响力主要有几个方面。一是colin对游戏的追求和梦想，记得他的QQ签名上写过一句话，原话背不下来，意思大约是“游戏是一个需要多学科的一个领域，游戏本身就是人类的一个童话，做游戏需要很大的激情”，一直以来colin都以此为目标，朝着这个方向努力的。这点很值得我们佩服。二是，colin对下属的信任，其实这点我是非常感谢colin的，记得我被任命的时候，他跟我说的话至今印象非常深刻：“每个领导都有自己的风格，你大胆去做吧”，我觉得这个其实等于说充分授权吧，信任才让我们有更多空间去做该做的事情，即使过程中做错了，但有了leader的信任，我们才有机会去做的更好。三是colin对技术的关注和感悟， colin本身也是技术出身，除了产品，玩法本身，也会非常关心技术，对技术有很多感悟，他自己经常会看程序员杂志等，非常关注业界技术的发展，甚至看到感兴趣的内容，也会拿给我们，跟我们一起分享。第四，在colin身上学到了很多解决问题的方法和思路，琳琅天上工作室的两大文化“精商”和“务实”，其中“务实”我理解就是colin的“变通执行力”、“像蘑菇一样思考”等思想，大家应该都比较熟悉，除此以外，colin经常跟我们说，面对产品或制作人提出需求时，不要轻易下结论说自己不行，让自己有思考的时间，深入理解对方的用意，多做分析，另外，如果解决不了，不是因为能力不行，而是方法还未找到，所以我们不要把问题或困难挂起，而是延后处理，这是我们策略。这个印象比较深。

 

 Q5：能给大家分享一下今年7月份参加的T4晋升评审的感受和准备经验么？

 coolhomli：这次我是抱着试试看的角度，看看自己的专业发展上有哪些不足，看看评委给我什么样的建议，我觉得只要尝试了，即使不成功，也能知道自己哪方面还没有准备好，所以这是一个非常好的学习机会。这次评审最大的感受是，通过这次评审，促使自己对过往工作进行一次小结和梳理，通过参加评审给予自己更多反思的机会，也能意识到自己哪里不足，未来怎么发展，包括哪方面的知识多花点时间去关注的，就拿我这次评审来说，专家也指出了我的不足，建议关注和把握前沿的技术，这确实我的一个不足之处。另外这个也是拓宽自己的视野的机会，了解同一问题专家是如何理解的，抬头看一下别人所讲的，关注到你以前没有关注到的，全局观更强，所以我觉得这次评审收获还挺大的。

说到准备经验，这次评审我确实是做了一些准备的，比如之前会考虑20分钟的自述应该如何讲，评委会关注哪些内容，如何把我的内容很好地传达给对方等问题，准备了PPT之后，也会尝试预演，看看自己在规定20分钟是否能讲完，如果能找到一些资深专家帮你提前看一下PPT内容就更好了。另外一点，到底什么才是专家？其实在评委心中，专家是没有统一的模子的，找到自己的优势之处，充分发挥，你就是这方面的专家。所以要对自己有信心。

 

 

Q6：最后一个问题，能否从你的职业生涯中总结一些关键词，作为对其他同事的职业发展一些建议?

coolhomli：

1.    “服务意识或者说用户意识”：考虑问题，应该从用户和产品角度去考虑，关注什么才是用户最需要的。

2.     “全局观”：考虑问题更全面一些，了解前因后果，全面思考。

3.     “结果”：对结果负责，结果导向要很强，根据结果去思考达成的思路和方法。

4.    “过程”：过程很重要，过程当中的方法，应该寻找适合自己的方法。

5.    “学习的敏锐度”：其实这点我做的还不够，但我觉得这个很重要，因为知识跟经验都是暂时的，但是一个人能否应对未来的发展，会不会学，如何善于把以前的经验应用到未来的问题，这是取决于本身学习的敏锐度。每个人身上都有优点，都有值得他人学习的地方，要找出对方优胜之处，并且向他学习，这就是一个学习的敏锐度的表现。