Miloyip：兴趣是成长的最大驱动力

Milo Yip (叶劲峰)，香港土生土长，取得认知科学学士、系统工程及工程管理哲学硕士。爱好编程和游戏，高中时曾开发单机游戏并于台湾发行，硕士毕业后从事游戏相关的技术研发，曾担任上海育碧，上海麻辣马资深程序员。2011年4月加入腾讯，工作于互娱研发部引擎技术中心技术平台组，2012年初晋升T4客户端前台开发专家工程师，在过去一年曾为多个游戏项目研发公用的数学库、可见性判别(visibility determination)、纹理和几何数据压缩等中间件。

导读：与milo的访谈足足进行了两个多小时， milo娓娓道来不一样的成长经历，跟着milo回忆的脚步，让我们一起走进他的游戏成长之路……

 

游戏童年

我生于1977年英国殖民时代的香港。童年非常羡慕其他小朋友拥有许多玩具，曾经梦想的职业是玩具设计师，但是当时家境并不富裕，只能自己常常动手做一些玩具或者折纸。回想起来，我怀疑幼年的我是从折纸中学到如何阅读说明去自我学习的，并且尝试做事情以完美为目标。那时候我的技术还不错，例如可以用一张正方形纸，不用粘贴折九只头尾相连的鹤。慢慢地，还学会了自己设计纸模型，一开始是设计一些规则的几何体，发展到后来，就可以设计一些不规则形状的，例如一辆跑车。

我最初接触游戏是在小学一、二年级，学校开设了兴趣班，课程之初，是通过教育软件去学一些电脑知识（用BBC Micro），之后课堂上会教一些很简单的basic语言，不过我最开心的是，课堂结束前15分钟的游戏时间。一开始只是单纯玩游戏简单，后来发现游戏其实是一个程序，于是自己开始尝试进行修改源程序，甚至还重写过BBC Micro上玩的“撞砖”游戏，从中学到了一点游戏模拟技巧，慢慢就了解游戏的某些原理及开发的方法。小学四年级，我当上了学校图书馆的管理员。当时学校都是一些没有软盘和硬盘，没录音机的Apple  IIe电脑，只能用来编写BASIC程序，不能玩游戏。记得当时想：“想玩游戏？自己写啊！”于是我每天上完课，就是图书馆借书，阅读，上机编程，把午休和放学后的时间都用上了。课上和晚上，还会把程序写在纸上，在脑海中运行程序。那时候写的程序，主要围绕游戏和图形。

在学习的过程中，我意识到编程的世界是虚拟的、完美的，不像机械或电子等物理系统有许多限制，几乎凡是想得到的事情都能用编程实现，并且能完全自动化地执行。这让我感到，编程本身，比使用软件的乐趣要大得多。

从小学升上中学，1990年的暑假我终于获得人生第一台电脑――一台二手的286。通过这台电脑，我整个暑假都躲在家中，乐此不疲地编写不同类型的程序：二维图形、音乐、游戏等。慢慢地我发现了BASIC语言在编程上是有一定局限。于是在升中二的那年暑假，我开始自学C语言，并且Turbo C写了一个名为《3D Solid Maker and Viewer（三维实体制作及检示工具）》的软件，获得了学校 “微电脑教育（MIE）”比赛亚军。这时，我开始意识到自己很喜欢对图形进行编程，也许自己对编程方面真的有一定的能力与天赋。

 

小试创业



1992年前后，我在BBS上结识了一群有意开发游戏的朋友，成立了香港首家游戏工作室M&P System。最初我并没有直接参与开发，只是向朋友们学习更多游戏开发的知识，写过一些引擎和工具的原型，有时帮忙做点小事情。例如在公司首个作品《疯狂双响炮》（1993年）中，我设计了一个游戏关卡和做游戏测试。之后公司开发RPG《勇者传奇》（1994年）时，我在开发另一个RPG，做了地图编辑器和引擎，可操控主角行走，也有初步的战斗模式。

后来公司改组为阿博克。我在新项目里首次担负重任，那时我还在读中四理科班。这个新项目《王子传奇》是我发出的提案，是一个奇幻背景的策略角色扮演游戏（SRPG）。我主要负责游戏策划、编剧、游戏性编程（gameplay programming）。整个项目约由6位成员，历时18个月完成。

当时DOS运行于真实模式，能直接使用的内存只有640KB，完全不足以做无缝的地图渲染。最后，我们做了个大胆的决定，用汇编开发32位保护模式的引擎，用Turbo C++开发16位真实模式的游戏性部分。引擎部分由我那牛人拍档开发，而我主要编写游戏性部分。那个引擎，基本上就是要先从头写一个32位保护模式的操作系统，管理内存、磁盘读写、设备驱动等，再开发地图渲染引擎。游戏的“脚本”使用C语言来编写（包括用宏来做数据驱动），利用覆盖（overlay）机制的按需载入。

在那漫长的制作期里，基本上星期一至星期五放学后，周末和假期，我都会在公司里工作。后来一些伙伴在项目结束前就离开公司，最后在不太欢乐的气氛下完成了这个作品，使得游戏内容有点虎头蛇尾。虽然听说这作品在台湾卖得还不错，可是由于一些问题，我最终除了暑假获得的一点津贴外就没有其他经济上的收益，当然，开发经验除外。自此我离开了游戏业界，继续求学之路。



求学深造



重返正常的学习轨迹之后，我陆陆续续参加了不少比赛，也拿过不少奖项。由于当时的比赛主题主要是教育方面，因此我一直都希望通过游戏的方式，增加教育的娱乐性，寓教于乐。比如我中七时设计过的一款游戏（小天使英语历险记），是一个马利奥式的横向平台动作寓教于乐（edutainment）软件。基本上是把英文词汇拼写问题加进游戏关卡里，除了跑、跳、踏、射，每关还有Boss战。所以，我与很多参赛者所做的程序都不太一样，更多像是开发一款游戏。

一直以为，我会顺利入读计算机系。因为一个意外，我未能如愿，而是念了香港大学的“认知科学（Cognitive Science）专业”。认知科学是一门以科学方法去研究人类心灵（Human Mind）的跨领域学科。这个科目不仅包含有计算机、人工智能课程，我还可以学到很多之前没有想过的知识，包括心理学、语言学、哲学，神经科学等。现在看来，认知科学这个科目确实让拓宽了我的视野，譬如考虑问题需要从人的因素，人的需求出发。



回归游戏



1999年的香港，科网股非常盛行。我和大学同学也顺应潮流，在外创业，做过网站，信息系统开发等业务，但是时间长了，发现帮助别人做系统不是我的兴趣所在，我还是比较喜欢做游戏。于是当时的我做了一个很大胆的抉择--要回归游戏，一是离开公司，二是不继续攻读博士（当时我已经拿到攻读博士的通知）。虽然之前我一直在做一些编程工作，但是觉得如果直接到游戏公司，创新方面还是会有所欠缺，我还是希望在此阶段能多做一些游戏方面的研究。于是硕士毕业后，我加入了香港理工大学的多媒体创新中心，先做项目研究员，再思考申请博士生的研究提案。可惜，攻博中期和导师出现了严重的分歧，便暂停了历时两年的兼读博士生生涯。

随后的学术生涯让我越来越体会，我们一直在做的只能是技术方向的研究，不可能有内容，如果要自己开发游戏，还是需要到业界的公司多学习。当时也遇到了一个难题，我应该选择哪里，什么样的游戏公司？虽然很向往美国加拿大等游戏公司，但是考虑到家庭和内地经济蓬勃发展等因素，我经过以前一位同事的联系和介绍，2008年加入上海育碧，职位是引擎工程师。一开始负责的是儿童动画片游戏《美食从天而降》项目，项目的难点在于用一个内部引擎开发四个版本，适应于四个平台：PC，PS3，xbox360，wii。我的首个工作是将引擎移植到PS3，当时我是第一次接触PS3的开发，而当时的项目团队只有我和主程两个人，又没人可以帮助我。最后唯有靠自学，用了大概一星期左右学习、读档，尝试写一些测试程序。最后我花了一个多月时间，完成引擎的移植。做完《美食从天而降》之后，公司后续一直没有大项目的安排，而我对当时公司的其他项目也并不是很感兴趣，于是希望到其他公司参与感兴趣的项目。

一个机缘巧合的情况下，认识到麻辣马公司，我很感兴趣他们当时做的项目，考虑到麻辣马在游戏开发领域也是颇具实力，且公司氛围很有创作激情，于是结束了育碧的20个月的工作生涯，正式入职麻辣马。

当时麻辣马的游戏主要是在国外发行，限制很少，创作自由很大，我第一个负责的项目为《爱丽丝惊魂记：疯狂再临》。记得当时我在这个游戏中做了很多UE3引擎的改进，及游戏性编程，但我自己比较满意的是头发部分。因为游戏的主角是一把长头发、穿裙子的女孩，叫爱丽丝。大家都知道，一般游戏的女主角不会有长发或穿裙子，因为做起来会很麻烦，所以很多情况下女孩角色都是粉头发、穿裤子，当然短裙是最好的。一开始，大家做出来的模型也是与其他游戏差不多，爱丽丝头发看上去像塑胶头盔，我自己看了，感觉不太满意。于是利用一个周末在家里尝试其他一些方法，最后做出一些方案请示老板，老板看了也表示支持。之后我花了两三个星期设计了一个比较满意的原型，并且也在xbox360上进行测试证明了性能等方面也是可行的。同样，我们后续也通过一些玩法用裙子做表现。通过头发、裙子这些细节做出了游戏本身的特色。

在爱丽丝项目的尾声阶段，我回到了香港，独立完成了把PC版的原爱丽丝惊魂记移植至xbox360及PS3。这时麻辣马正面临了一个游戏开发的转型局面，希望停止开发大型console游戏，改做免费可下载网游。这个转型对当时我们这些程序员的影响还是比较大的，最后我和5、6个同事经由腾讯的前上海育碧同事介绍，正式加入了腾讯公司。



腾讯印象



来到腾讯公司之后，发现与之前两个游戏公司不一样的体验：在育碧和麻辣马工作模式以做项目为主，很难有机会做一些研究的工作，而在腾讯，更像我之前大学的工作，以顾问的角色，开发公用组件给其他项目组使用，在这里我可以做更多我想去做的事情──做一些比较前沿技术的研究工作。

说到腾讯的职级晋升，其实在入职之前，HR并没和我提及公司的职级体系，我认为只要公司给予足够的空间和合适的环境，并且自己掌握机遇，发挥所长，自然能得到认同。是什么职级并不重要，能做出什么来才是重要的。对我来说，晋升只是一个正面副作用(positive side-effect)，以及能力的认可。

说到面试的经验，职级晋升面试是需要面试人具备良好的沟通表达能力，最重要的是，怎样在短时间内清楚描述过去一年的工作及技术重点。普遍来说，程序员的演说能力通常是较弱的一环，我也不例外(尤其是我的港式普通话水平非常一般)。弥补的方法是用数据说话，最理想的做法是与业界的技术方案进行比较。要注意一点的是，评委可能来自其他BG，未必对某些技术有深入了解，因此需要简单说明需求及原理，以及通过比较实际数据去说明成果(没有比较的数字是难以理解其成效的)。二是，要从听众的角度去说明，希望听众能乐见成果，而不是沉闷地尝试理解一些冗长细节。另外，我相信在面试中我比别人的优胜之处，在于打印了比较多在公司内外的一些技术写作，作为佐证材料。筹备晋升面试需要准备演示，整理个人工作经历及业绩，以及相关技术文档等，这些内容需要花上不少时间，我的经验大约是40小时。如果条件允许的话，最好能找到适合的同事进行预讲。

听完milo的传奇成长之路，你是不是意犹未尽呢，希望milo能进一步分享更多的成功经验呢，不要着急，请继续看下去。。。。



成长心得



Q1: milo，你的经历很传奇，按照一般人的思维来看，你走的是一条非常规的路。你一路走来，是否碰到一些阻力，能让你坚持走这条路的驱动力是什么呢？

miloyip：其实上小学的时候，家里并没有反对我学电脑，因为当时我在学校当图书管理员，放学就去图书馆自学电脑，家里人还是比较放心。上中学时，我刚好处于青春期反叛的阶段，大多数情况下，只要我感兴趣的事情，我都会比较投入。就算做一个简单的模型，我都可以几个小时不离开。其实我也会出现过放弃的情况，恒心也是慢慢磨练出来的。比如参加比赛时，截止日期是固定的，这就可以慢慢训练我要完成一件事情，时间是有限的，如何寻求最好的解决方法，以确保计划能够如期完成，我可以说算是逼出来的。所以面对所做的项目越来越大，最需要的就是毅力，如何可以中途不放弃。

Q2:你在读书时已经开始创业了，与自己年龄大的人共事，他们对你后来的职业发展是否具有一定的影响力？

miloyip：我觉得当时中学创业的游戏工作室同事阿荣，在技术方面对我的影响比较大。因为我之前一直都是自学一些乱七八糟的东西，做的东西无论是工程上还是质量上，都没有达到专业的程度。而他当时已经是比较有经验的程序员，虽然他只是高中毕业，但他学习的东西很深入，那个386年代通常是用DOS写程序，但DOS的内存只能用到640K，当时电脑到了2MB-4MB的内存，要用这些内存有不同的方法，但最后在做我这个项目的时候，他自行开发了一个dos保护模式的程序(DOS Extender)，就像写一个小OS出来。从现在这个角度来想，自己写一个OS去凌驾于DOS，从DOS的真实模式到保护模式。但首先这需要你需要很多知识，包括386CPU的结构，对于一个没有上过大学，没有读过操作系统课的人而言，我觉得他自己可以学到这样的深度，真的挺了不起。他让我认识到做技术一定要深入，而不是写完个程序就算完成任务了。其实程序一定可以写的更好，关键是你的经验知识有多少。假如你具备一定的知识与经验，就可以做出超出预期的东西，甚至可以做出不同的解决办法或别人没想到的东西。这期间跟他一直交流、学习，慢慢将我从一个业余水平转变成专业水平。这过程并不是说用一句话影响到我来做这个改变，而是慢慢改变的。

Q3:你在网上有一个写书评的博客，也因为这个让很多人认识了你，你是不是一直很喜欢阅读和写作？你认为阅读和写作给你带来什么样的变化？

miloyip：其实写书评是我去上海才开始做的事情，一个比较偶然的机会，因读了一本有点失望的书，并在豆瓣网站写了一篇书评，之后认识了许多IT、出版业界朋友，慢慢在国内开了一个博客。我是从小都挺喜欢阅读的，当时小学、中学没有互联网，很多知识只能从书本上吸收，不像现在很多人想解决问题，就直接上网搜索看看答案。现在看来读书相比网上找资料也有很多好处，至少某一方面的知识会更加系统化，所以我一直都有阅读或是鼓励我的同事们去阅读的习惯。

如果要说我比一般游戏程序员的优势，就是曾在大学里接受过学术研究训练。尽管我的知识还是非常有限，但我不会惧怕──甚至应该说是喜欢──阅读学术文献、专门技术书籍。事实上，我对于编程、游戏开发、图形学、物理模拟等知识，都是从小自习所得(我本科是读认知科学的，当中只有算法和人工智能方面和游戏开发比较相关)。前阵子尝试把游戏开发相关的书籍分类，和大家分享(http://www.douban.com/people/miloyip/doulists)。虽然读过什么东西，并不能反映一个人的知识水平，但程序员如果不吸纳新知识，在日新月异的世界中是难以生存的。

关于写作，程序员大多讨厌写文档，当中有些人可能觉得代码就是产出，就是成果的证明。但是代码仅是写作的一种，自然语言(natural language，如中文、英文)的写作是另一种我们应该要做的产出。技术写作有两方面的用途。一方面是令自己在写作过程中把思路整理，系统地分析问题，把经验总结。另一方面是使知识及技术细节更容易地分享，通过交流去推动技术进步。人类的科技都是这样积累而成的。

之前谈到研发时需要参考文献，同时也应该把相关的重点写出来，并比较各个方案。据我的经验，这么做能令自己对问题建立出一些体系，把复杂的问题拆分，并从各个层面去分析问题。

个人认为，除了项目的直接成果，这些写作的品质更会反映个人的能力水平。如果能对外出版、演说，获得业界学界的认可，就更能证明个人的能力，并对公司形象有正面影响。

Q4：你怎样看待自己目前从事的开发工作？

miloyip：我较偏好使用“研发(Research and Development, R & D)”一词而不是”开发”去形容我的工作。我的目标是要做出业界内最好的技术、工具，更希望通过创新科技去突破现有的框框。

研发的第一步是定义问题。发掘需求并不是容易之事。有些需求可能是项目团队提出的，但更理想的是找到一些别人所需，但连他们也未想到的需求。会出现这样的情况，可能是客户(游戏策划、技术美工等)没注意到有这样的技术可行性，也可能是程序员对相关技术了解不足，或是没有时间去研发。但要创新，就必须花时间精力去发掘这些未知的需求领域。(访问后看到Steve Jobs一句相关的语录”我们很难跟随焦点团体里的意见来设计产品。因为很多的时候，人们并不知道他们想要的是什么，直到你将产品放到他们的眼前。 It's really hard to design products by focus groups. A lot of times, people don't know what they want until you show it to them.”)

技术不能无中生有，我们需要站在巨人的肩膀上。在研发的过程中，我们必须参考尽量多的相关文献、实际案例，再找出最合适的方案。在研发初期，可先实现别人的做法，作为基线，从中深入体会问题的核心，然后才尝试自己的方案。必须有比较，并在保证正确性的情形下，才能进行技术突破。

失败是创新之母。要勇于创新，便需勇于接受失败。如果一项技术、方案你确信会成功，很可能别人都已经想过了、做过了。不要为失败气馁，甚至应视之为常态。在项目管理中可以先实现基本的方案，再尽量于时间许可下多做实验，总结经验。

在愿景上，目光不可以仅把技术停留在一个项目。要考虑到怎么把成熟后的技术推广至更多项目组、工作室，甚至是否跨越互娱到达公司级的层次。不要因为现时的资源不足而却步，应该希望通过项目的成功去逐步扩充研发的规模。

另一点我想谈的，就是日常生活的时间分配。除了在工作汲取经验，程序员还需要花时间去学习及成长。对于做游戏开发的，玩(及研究)游戏也是必须的。理想地，除了阅读外，程序员也应该撰写博客及参与开源项目(我自己也在尝试，做了一个简单的rapidjson)。这些都是很花时间的活动，而且要长期投入。最好可以制定时间表或时间的预算，去平衡家庭、工作、学习、休闲和休息(不分先后次序)。如果工作需要长期加班，会影响个人成长及发展，这方面的问题需要大家共同努力关注。

Q5：最后一个问题，能否从你的职业生涯中总结一些关键词，作为对其他同事的职业发展一些建议?

miloyip：我简单说说几个方面与大家一起共勉，希望在未来的工作中可以继续与大家有更多的交流。

1.   “专业的态度”：是做软件开发专业的态度，并且对于软件开发工作的经验想法。因为专业，你会想如何改进这些开发流程，如何从编码、文档每个角度做的更好。

2.    “学习”：因为我认为无论是哪个阶段，包括我自己都是需要不断学习的。广度与深度也要继续下去。

3.     “兴趣”：可以看到我之前的很多经历是由于我的兴趣而做的，中间我也做过一个比较大的决定，例如我放弃了读博，就是因为我不能投入，想去找寻自己的兴趣，从兴趣的方向发展。如果这份工作你不喜欢做，那么你的时间可能没有意义，整个人生的时间是很有限的，是在浪费生命。如果你觉得是自己有兴趣的事就努力去做，如果没有兴趣的话就考虑转行，找到自己的兴趣。

4.     “创新”： 创新与创意不一样，创新是从一些已有的技术或是做法应用到一个新的地方，作为一个游戏程序员，我不想每天做重复性的东西，而是要做别人没有的东西。就像爱丽丝的头发和衣服，是因为我想在这个游戏里做出很不一样的游戏效果。我自己一直在搜集创新的想法，中间当然会有很多问题可能还没有解决，或者还没有人实验出来，我会将一些点子搜集起来。之后接触到一些新的技术，看看他们能不能解决我某一些点子里面的问题，可能某一天它就会孵化成一个真的东西出来。所以我希望我在腾讯里可以做到更创新的东西出来，也希望那些做游戏的人要不停的有创新的想法。做游戏不要把利润作为出发点，而是要从玩家得到快乐、满足感出发，这样最终才能做出好的游戏出来。

（全文完）